This is the simple DNS mot secure but is is good for testing on a local system. do not use this DNC on public it is not secure

#yum install bind bind-utils


#vim /etc/named.conf
## Add This line

 listen-on port 53 { 127.0.0.1;10.0.15.0/24; };
        #listen-on-v6 port 53 { ::1; };
	###add what is subnet where you are testing your dns server.
	allow-query     { localhost;0.0.0.0/0; };

#################### add this line at the end of file before include files###########
	zone "example.com" IN {
        	type master;
        	file "forward.example.com";
        	allow-update { none; };
	};
	zone "15.0.10.in-addr.arpa" IN {
        	type master;
        	file "reverse.example.com";
        	allow-update { none; };
	};

#######################

#create forward zone. In some cases people create file like .db extension this is nothing, it is a text files just add db at the end.

[root@kube1 ~]# vim /var/named/forward.example.com

$TTL 86400
@ IN  SOA     kube1.example.com. root.example.com. (
        201811252  ;Serial
        3600        ;Refresh
        1800        ;Retry
        604800      ;Expire
        86400       ;Minimum TTL
)
@       IN NS           kube1.example.com.
@       IN A            10.0.15.42
@       IN A            10.0.15.41
@       IN A            10.0.15.43
@       IN A            10.0.15.61
@       IN A            10.0.15.62
@       IN A            10.0.15.63
kube1    IN A            10.0.15.61
test1    IN A            10.0.15.41
test3    IN A            10.0.15.43
test2    IN A            10.0.15.42
kube2    IN A            10.0.15.62
kube3    IN A            10.0.15.63

#creat reverse dns
[root@kube1 ~]# vim /var/named/reverse.example.com 
$TTL 86400
@ IN  SOA     kube1.example.com. root.example.com. (
        201811252   ;Serial
        3600        ;Refresh
        1800        ;Retry
        604800      ;Expire
        86400       ;Minimum TTL
)
@       IN  NS          kube1.example.com.
@       IN PTR          example.com.
test2    IN A            10.0.15.42
test1    IN A            10.0.15.41
test3    IN A            10.0.15.43
kube1    IN A            10.0.15.61
kube2    IN A            10.0.15.62
kube3    IN A            10.0.15.63
42      IN PTR          test2.example.com.
41      IN PTR          test1.example.com.
43      IN PTR          test3.example.com.
61      IN PTR          kube1.example.com.
62      IN PTR          kube2.example.com.
63      IN PTR          kube3.example.com.

## finally check configuratiuon for dns
#named-checkconf
## if your dns doesnt have any error than it will not show anything

##Now chaecking zone for forward zone
[root@kube1 ~]# named-checkzone example.com /var/named/forward.example.com 
zone example.com/IN: loaded serial 201811252
OK
[root@kube1 ~]# 
##ok means you dont have any error

## checking zone for reverse dns
[root@kube1 ~]# named-checkzone example.com /var/named/reverse.example.com 
zone example.com/IN: loaded serial 201811252
OK
[root@kube1 ~]# 
############################3
[root@kube1 ~]# named-checkzone example.com /var/named/reverse.example.com 
zone example.com/IN: loaded serial 201811252
OK
[root@kube1 ~]# 
###################
## Restart your dns
# systemctl start named
# systemctl enable named
################
##finally add your dns information on /etc/resolve.conf
# vim /etc/resolve.conf

[root@kube1 ~]# vim /etc/resolv.conf 
# Generated by NetworkManager
search example.com
nameserver 10.0.15.61
[root@kube1 ~]# 

# now you can check your dns like this now here my dns resolve by both way....

[root@kube1 ~]# nslookup kube2.example.com
Server:		10.0.15.61
Address:	10.0.15.61#53

Name:	kube2.example.com
Address: 10.0.15.62

[root@kube1 ~]# 
[root@kube1 ~]# nslookup 10.0.15.62
Server:		10.0.15.61
Address:	10.0.15.61#53

62.15.0.10.in-addr.arpa	name = kube2.example.com.

[root@kube1 ~]#
